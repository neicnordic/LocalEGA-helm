global:
  c4ghPath: c4gh
  jwtPath: jwt
  tlsPath: tls
  podSecurityPolicy:
    create: false
  archive:
    storageType: s3
    s3Url: "http://minio"
    s3Port: 9000
    s3Bucket: "archive"
    s3ReadyPath: "/minio/health/ready"
  auth:
    elixirID: DfCieZLuBU
    elixirSecret: DfCieZLuBU
    jwtSecret: oidc
    jwtAlg: ES256
    jwtKey: token.key
    jwtPub: token.pub
  backupArchive:
    storageType: s3
    s3Url: "http://minio"
    s3Port: 9000
    s3Bucket: "backup"
    s3ReadyPath: "/minio/health/ready"
  broker:
    host: "broker-sda-mq"
    exchange: "sda"
    port: 5672
    password: "admin"
    username: "admin"
    backupRoutingKey: "backup"
  db:
    host: "postgres-sda-db"
  c4gh:
    secretName: c4gh
    keyFile: c4gh.key
    publicFile: c4gh.pub
  elixir:
    oidcdHost: "http://oidc-server:8080"
    jwkPath: ""
  inbox:
    storageType: s3
    # existingClaim: test
    s3Url: http://minio
    s3Port: 9000
    s3Bucket: "inbox"
    s3ReadyPath: "/minio/health/ready"
  ingress:
    deploy: false
    hostName:
      auth: sda-sda-svc-auth
  logLevel: debug
  schemaType: isolated
  tls:
    enabled: false
backup:
  deploy: true
intercept:
  deploy: false
releasetest:
  run: true
