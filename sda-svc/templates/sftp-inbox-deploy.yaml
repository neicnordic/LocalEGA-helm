{{- if or (or (eq "all" .Values.global.deploymentType) (eq "external" .Values.global.deploymentType) ) (not .Values.global.deploymentType) }}
{{- if eq "FileStorage" .Values.global.inbox.storageType }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "sda.fullname" . }}-inbox
  labels:
    role: inbox
    app: {{ template "sda.fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: {{ .Release.Name }}-inbox
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  revisionHistoryLimit: {{ default "3" .Values.global.revisionHistory }}
  selector:
    matchLabels:
      app: {{ template "sda.fullname" . }}-inbox
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "sda.fullname" . }}-inbox
        role: inbox
        release: {{ .Release.Name }}
        type: sftp-inbox
      annotations:
        {{- if not .Values.global.confFile }}
        checksum/config: {{ include (print $.Template.BasePath "/sftp-inbox-secrets.yaml") . | sha256sum }}
        {{- end }}
{{- if .Values.global.podAnnotations }}
{{- tpl .Values.global.podAnnotations . | nindent 8 -}}
{{- end }}
{{- if .Values.sftpInbox.annotations }}
{{- tpl .Values.sftpInbox.annotations . | nindent 8 -}}
{{- end }}
    spec:
    {{- if .Values.sftpInbox.nodeHostname }}
      nodeSelector:
        kubernetes.io/hostname: {{ .Values.sftpInbox.nodeHostname }}
    {{- end }}
    {{- if .Values.rbacEnabled}}
      serviceAccountName: {{ .Release.Name }}
    {{- end }}
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: inbox
        image: "{{ .Values.sftpInbox.repository }}:{{ .Values.sftpInbox.imageTag }}"
        imagePullPolicy: {{ .Values.sftpInbox.imagePullPolicy | quote }}
        command: ["java", "-jar", "inbox-0.0.3-SNAPSHOT.jar"]
        securityContext:
          allowPrivilegeEscalation: false
        resources:
{{ toYaml .Values.sftpInbox.resources | trim | indent 10 }}
        env:
        - name: LOGGING_LEVEL_SE_NBIS_LEGA_INBOX
          value: {{ .Values.global.log | quote }}
        - name: BROKER_HOST
          value: {{ required "A valid MQ host is required" .Values.global.broker.host | quote }}
        - name: BROKER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "sda.fullname" . }}-inbox
              key: mqPassword
        - name: BROKER_PORT
          value: {{ .Values.global.broker.port | quote }}
        - name: BROKER_USERNAME
          value: {{ include "mqUserInbox" . | quote }}
        - name: BROKER_VHOST
          value: {{ .Values.global.broker.vhost | quote }}
        - name: CEGA_ENDPOINT
          value: {{ printf "%s%s" (.Values.global.cega.host) "/lega/v1/legas/users/%s?idType=username" | quote }}
        - name: CEGA_ENDPOINT_CREDS
          valueFrom:
            secretKeyRef:
              name: {{ template "sda.fullname" . }}-inbox
              key: cegaCredentials
        - name: KEYSTORE_PATH
          value: "/etc/ssl/certs/java/inbox.p12"
        - name: KEYSTORE_PASSWORD
          value: {{ .Values.sftpInbox.keystorePass | quote }}
        - name: KEYSTORE_TYPE
          value: "PKCS12"
        - name: USE_SSL
          value: "true"
        ports:
        - name: inbox
          containerPort: 2222
          protocol: TCP
        - name: liveness-port
          containerPort: 8080
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: liveness-port
          initialDelaySeconds: 120
          periodSeconds: 5
        readinessProbe:
          tcpSocket:
            port: 2222
          initialDelaySeconds: 30
          periodSeconds: 5
        volumeMounts:
        - name: inbox
          mountPath: "/ega/inbox"
        - name: tls
          mountPath: "/etc/ssl/certs/java"
      volumes:
        - name: inbox
      {{- if .Values.global.inbox.existingClaim }}
          persistentVolumeClaim:
            claimName: {{ .Values.global.inbox.existingClaim }}
      {{- else }}
          nfs:
            server: {{ required "An inbox NFS server is required" .Values.global.inbox.nfsServer | quote }}
            path: {{ if .Values.global.inbox.nfsPath }}{{ .Values.global.inbox.nfsPath | quote}}{{ else }}{{ "/" }}{{ end }}
      {{- end }}
        - name: tls
          secret:
            secretName: {{ template "sda.fullname" . }}-inbox-certs
            defaultMode: 0440
{{- end }}
{{- end }}
