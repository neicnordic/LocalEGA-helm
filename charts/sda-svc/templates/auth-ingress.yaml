{{- if (or (or (eq "all" .Values.global.deploymentType) (eq "external" .Values.global.deploymentType)) (not .Values.global.deploymentType)) }}
{{- if and .Values.global.ingress.deploy (eq "s3" .Values.global.inbox.storageType) }}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ template "sda.fullname" . }}-auth-ingress
  labels:
    app: {{ template "sda.fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
{{- if .Values.global.ingress.labels }}
{{ toYaml .Values.global.ingress.labels | indent 4 }}
{{- end }}
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: "/"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    {{- if .Values.global.ingress.issuer }}
    cert-manager.io/cluster-issuer: {{ .Values.global.ingress.issuer | quote }}
    {{- end }}
spec:
  rules:
  - host: {{ required "An ingress hostname is required!" .Values.global.ingress.hostName.auth }}
    http:
      paths:
        - path: "/"
          backend:
            serviceName: {{ template "sda.fullname" . }}-auth
            servicePort: {{ ternary 80 443 ( empty .Values.global.auth.useTLS ) }}
  tls:
  - hosts:
    - {{ required "An ingress hostname is required!" .Values.global.ingress.hostName.auth }}
    secretName: {{ if .Values.global.ingress.secretNames.auth }}{{ .Values.global.ingress.secretNames.auth }}{{- else }}"{{ template "sda.fullname" . }}-ingress-auth"{{- end }}
{{- end }}
{{- end }}
