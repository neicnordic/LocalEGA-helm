name: sda-pipeline deployment

on: [push,pull_request]

jobs:
  build:
    strategy:
      matrix:
        test: [sftp-inbox, s3-inbox]
    runs-on: ubuntu-latest
    steps:
    - name: ACTIONS_ALLOW_UNSECURE_COMMANDS
      id: ACTIONS_ALLOW_UNSECURE_COMMANDS
      run: echo 'ACTIONS_ALLOW_UNSECURE_COMMANDS=true' >> $GITHUB_ENV
    # Currently the sftp inbox test covers the standalone test, whereas the s3 test checks the federated topology
    - name: fixup env
      run: |
        if [ "${{ matrix.test }}" = "sftp-inbox" ]; then
          echo "SVCS=backup doa download finalize inbox ingest intercept mapper verify" >> "$GITHUB_ENV";
        else
          echo "SVCS=auth backup doa download finalize inbox ingest mapper verify" >> "$GITHUB_ENV";
        fi
    - uses: actions/checkout@v2
    - name: Install kube dependencies
      run: bash ./dev_tools/scripts/install-kube-deps.sh
    - name: Initialise k3d
      run: bash ./dev_tools/scripts/init-k3d.sh
    - name: Wait for k3d to become ready
      run: bash ./dev_tools/scripts/wait-for-pods.sh metrics-server k8s-app kube-system
    - name: Install sda dependencies
      run: bash ./dev_tools/scripts/install-sda-deps.sh
    - name: Create certificates
      run: bash ./dev_tools/scripts/make-certs.sh
    - name: Create java certificates
      run: bash ./dev_tools/scripts/java-certs.sh
    - name: Create secrets
      run: bash ./dev_tools/scripts/create-secrets.sh
    - name: Set up services configuration
      run: bash ./dev_tools/scripts/svc-setup.sh
    - name: Deploy SDA database
      run: bash ./dev_tools/scripts/deploy-db.sh
    - name: Wait for database to become ready
      run: bash ./dev_tools/scripts/wait-for-pods.sh database
    - name: Deploy mock oidc server
      if: matrix.test == 's3-inbox'
      run: bash ./dev_tools/scripts/deploy-oidc.sh
    - name: Deploy minio
      if: matrix.test == 's3-inbox'
      run: bash ./dev_tools/scripts/deploy-minio.sh
    - name: Wait for minio to become ready
      if: matrix.test == 's3-inbox'
      run: bash ./dev_tools/scripts/wait-for-pods.sh minio app
    - name: Create s3 buckets
      if: matrix.test == 's3-inbox'
      run: bash ./dev_tools/scripts/create-s3-buckets.sh
    - name: Start CEGA services
      run: bash ./dev_tools/scripts/deploy-cega.sh
    - name: Wait for CEGA to become ready
      run: bash ./dev_tools/scripts/wait-for-pods.sh cega-mq app
    - name: Deploy SDA message broker
      run: bash ./dev_tools/scripts/deploy-mq.sh
    - name: Wait for broker to become ready
      run: bash ./dev_tools/scripts/wait-for-pods.sh broker
    - name: Deploy the SDA stack for posix
      if: matrix.test == 'sftp-inbox'
      run: |
        kubectl apply -f dev_tools/config/posix-volumes.yaml;
        bash ./dev_tools/scripts/sda/deploy-posix-standalone.sh "not-orchestrated";
    - name: Deploy the SDA stack for s3
      if: matrix.test == 's3-inbox'
      run: bash ./dev_tools/scripts/sda/deploy-s3-federated.sh
    - name: Wait for sda to become ready
      run: bash ./dev_tools/scripts/wait-for-pods.sh "${{ env.SVCS }}"
    - name: Run helm test
      run: bash ./dev_tools/scripts/run-helm-test.sh
